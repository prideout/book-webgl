"WebGL Techniques"

Four types of sections:
Exposition
Interaction Recipes
Rendering Recipes
Application Recipes

------------

Vector Algebra with Javascript
The Canvas Element
The Life of a Triangle
  Vertex Buffer Objects
  Vertex Attributes
  Typed Arrays
Loading Binaries with XMLHttpRequest
Fetching and Displaying Textures
Framebuffer Objects

\irecipe{Trackball}{ Classic mouse-driven rotation } % With momentum and quats!
\irecipe{SelectionBuffer}
\irecipe{PointSelection}{ Voronoi maps for point-cloud selection }
\irecipe{ViewCube}{ Move the camera by clicking on a mini-cube with hotspots }
\irecipe{Manipulators}{ Interactive handles for positioning objects }

\arecipe{BlockPuzzle}{Move a cuboid around on grid-based playing field}
\arecipe{HouseModeler}{Draw quads that can be extruded into buildings}
\arecipe{SetDresser}{Place objects and spotlights into a scene} % might include uberlight, projection textures, and mirrors

\rrecipe{ColorGraph}{Animated wireframe graph of the sinc function}
\rrecipe{BoneSystem}{ bends a humanoid wireframe; visualizes CMU mocap data }
\rrecipe{ParametricSurface}{}
\rrecipe{BasicLighting}{}
\rrecipe{CelEffect}{Cartoon rendering with a two-pass silhouette}
\rrecipe{StenciledReflection}{Fake reflection using stencil}
\rrecipe{BumpMapping}{Art-provided normal maps} % external references: procedural bumping
\rrecipe{ParallaxMapping}{Improved bump mapping}
\rrecipe{CubemapReflection}{Classic, simple use of cubemaps} % refraction too?
\rrecipe{PointSprites}{Fireworks with source-over and additive blending}
\rrecipe{GaussianBlur}{Optimal filtering with minimal taps} % perhaps fold in HDR bloom too
\rrecipe{ShadowMaps}{Old-school PCF shadow mapping} % Uses PCF to soften edges
\rrecipe{SubsurfaceScattering}{Realistic marble} % similar to my fresnel glass demo
\rrecipe{NiceFog}{High-quality fog} % http://iquilezles.org/www/articles/fog/fog.htm
\rrecipe{MotionBlur}{Emphasizing movement with directional blur} % Also refer to the SIGGRAPH 2010 geometric motion blur
\rrecipe{DistanceBlur}{Depth of field via post-processing} % Real-time Depth-of-Field (ShaderX 5) -- there also seem to be some dx11 demos for this (ATI's ladybug)
\rrecipe{AmbientOcclusion}{Screen-space ambient occlusion}


------------



\rrecipe{ColorGraph}{Animated wireframe graph of the sinc function}
    % demonstrates performance gains with javascript vs glsl
    % demonstrates interleaved data and Typed Arrays (colors + uv)
\irecipe{Trackball}{ Classic mouse-driven rotation } % With momentum and quats!
\irecipe{SelectionBuffer}
\irecipe{PointSelection}{ Voronoi maps for point-cloud selection }
    % Modifies depth like a nailboard according to squared distance
    % Writes out gl$_VertexID
\irecipe{ViewCube}{ Move the camera by clicking on a mini-cube with hotspots }
\irecipe{QuadManips}{ Render "manipulators" to allow users to orient a quad in 3-space }

\arecipe{BlockPuzzle}{}
\arecipe{HouseModeler}{}
\arecipe{FunctionGrapher}{Implicit (FS) or parametric (VS)}
\arecipe{SetDresser}{Place models, spotlights, and projection textures into a scene} % might include uberlight and mirrors
  % mirrors http://www.terathon.com/lengyel/Lengyel-Oblique.pdf





%    \rrecipe{BlendShapes}{ morphs between two wireframe shapes
\rrecipe{BoneSystem}{ bends a humanoid wireframe; visualizes CMU mocap data }
\rrecipe{ParametricSurface}
\rrecipe{BasicLighting}
\rrecipe{CelEffect}{Cartoon rendering with a two-pass silhouette}
\rrecipe{StenciledReflection}{Fake reflection using stencil}
%    \rrecipe{StencilPaths}{Using the stencil buffer to draw concave paths}
\rrecipe{PixelNurbs}{Rendering NURB curves in the fragment shader} % ala GPU Pro article
      % http://www.mdk.org.pl/2007/10/27/curvy-blues
      % http://www.mdk.org.pl/2007/8/6/vector-drawing-opengl-shaders-and-cairo
      % http://www.mdk.org.pl/2007/8/16/vector-drawing-opengl-polygon-tessellation
%    \rrecipe{VisualizeDepth}{ Finding min/max Z and normalizing to grayscale}
%    \rrecipe{DepthComplexity}{ Visualizing depth complexity} % amends VisualizeDepth using hue for depth complexity
%    \rrecipe{EasyReflection}{Easy planar reflection}
%    \rrecipe{CompositeSolid}{Slicing and capping}
\rrecipe{BumpMapping}{Art-provided normal maps} % external references: procedural bumping
\rrecipe{CubemapReflection}{Classic, simple use of cubemaps} % refraction too?
%    \rrecipe{RenderCubemap}{Rendering a scene from all six vantage points}
%    \recipe{ProceduralNoise}{}
\rrecipe{PointSprites}{Fireworks with source-over and additive blending}
%    \recipe{BlendPrograms}{Ping-pong buffers for programmable blending}
%    \recipe{AnisotropicLighting}{Satin and brushed metal}
\rrecipe{GaussianBlur}{Optimal filtering with minimal taps} % perhaps fold in HDR bloom too
%    \recipe{MorphologicalAntialiasing}{Screen-space smoothing} % GPU Pro
        % Practical MLAA on a GPU: http://igm.univ-mlv.fr/~biri/mlaa-gpu/ (nice paper by Venceslas Biri)
%    \recipe{BlobShadows}{}
%    \recipe{ShadowVolumes}{Also known as ``stencil shadows''}
\rrecipe{ShadowMaps}{Old-school PCF shadow mapping} % Uses PCF to soften edges
%    \recipe{SoftShadows}{Penumbrae via anisotropic blur in screen-space} % as seen in "GPU Pro 2".
\rrecipe{ParallaxMapping}{Bumpy silhouettes}
\rrecipe{SubsurfaceScattering}{Realistic marble} % similar to my fresnel glass demo
\rrecipe{NiceFog}{High-quality fog} % http://iquilezles.org/www/articles/fog/fog.htm
\rrecipe{MotionBlur}{Emphasizing movement with directional blur} % Also refer to the SIGGRAPH 2010 geometric motion blur
\rrecipe{DistanceBlur}{Depth of field via post-processing} % Real-time Depth-of-Field (ShaderX 5) -- there also seem to be some dx11 demos for this (ATI's ladybug)
    % Layered DOF, Gather-based DOF, Diffusion DOF
    % good survey: http://developer.download.nvidia.com/presentations/2010/futuregameon/LouisBavoil_ModernRealTimeRenderingTechniques.pdf
%    \recipe{JitterFocus}{Depth of field via accumulation}
%    \rrecipe{Lightmaps}{Specular/Diffuse/AO maps with multitexturing} % nvidia-mesh-tools can help with this (and xNormal)
\rrecipe{AmbientOcclusion}{Screen-space ambient occlusion}
%    \rrecipe{LightBaker}{Reverse texture mapping; conservative rasterization}
%    \recipe{DistanceGeneration}{Generating a two-dimensional SEDT}
%    \recipe{GlyphAtlas}{Creating and using a texture atlas of SEDT glyphs}
%    \recipe{DistanceEffects}{Antialiasing, outlining, glow, and drop shadows}



%
% SSAO state of the art:
% http://cdn.bitbucket.org/simonwallner/ogre-ssao-sample/downloads/documentation.pdf
% The above paper seems to conclude hemisphere is best
%
% Might want to replace this with McGuire's Ambient Occlusion Volumes
% SSDM http://visual-computing.intel-research.net/art/publications/sdsm/
%
% hemicube rendering http://the-witness.net/news/?p=244 and http://freespace.virgin.net/hugo.elias/radiosity/radiosity.htm
% HBAO horizon-based ambient occlusion, analytical ambient occlusion: http://www.slideshare.net/DICEStudio/bending-the-graphics-pipeline
% Normal-Free HBAO (low-quality, as seen in DX10 SDK SSAO sample and Bad Company 2)
% Temporal Filtering can speed it up (Soler et al 2010, Herzog et al 2010)
% http://www.gamerendering.com/category/lighting/ssao-lighting/
% Sphere AO: http://www.iquilezles.org/www/articles/sphereao/sphereao.htm
% External References:
% Samuli Laine's Recent Paper (Rasterization Method)
% Stencil-based multi-resolution approach (GPU Pro)
% Hybrid Baked Lighting (per 'Rendering with Conviction')
% SSDO and indirect shadows
% http://directtovideo.wordpress.com/2010/01/
% Approximating Geometry with Discs (GPU Gems)
% "Cascaded Light Propagation Volumes for Real-Time Indirect Illumination"
%   ^-- Used by Crytek in actual games, but looks a bit complex.
